; ------------------------------------------------------------------------
;    _       ___      _______     _       ___     __           __
;   | |     / (_)___ /  / __ \   | |     / (_)___/ /___  ___  / /______
;   | | /| / / / __ \/ / / / /   | | /| / / / __  / __ \/ _ \/ __/ ___/
;   | |/ |/ / / / / / / /_/ /    | |/ |/ / / /_/ / /_/ /  __/ /_(__  ) 
;   |__/|__/_/_/ /_/_/\____/     |__/|__/_/\__,_/\__, /\___/\__/____/
;                                               /____/
;
;   Win10 Widgets for Rainmeter - GPU template
;       Author  - Adapted for GPU
;       Source  - Original project by TJ Markham (http://win10widgets.com)
;
; ------------------------------------------------------------------------

; About:
;   Template for GPU performance monitor.
;   NOTE: Rainmeter has no built-in universal GPU usage measure. This template
;   tries MSI Afterburner (via HWiNFO / RTSS shared memory) if available, else
;   will fall back to a static placeholder (0%). Users may need to install and
;   run one of: MSI Afterburner with Enable hardware monitoring + shared memory,
;   HWiNFO with Shared Memory Support, or use a 3rd-party plugin exposing
;   GPU usage as a measure. Adjust the [MeasureGPU] section accordingly.

[Variables]
; Set this to the measure you want the graph to use.
; Options provided below: MeasureGPUMSIAfterburner, MeasureGPUHWiNFO, MeasureGPUPlaceholder
GraphMeasure3=MeasureGPUMSIAfterburner
GraphLabel3="GPU"
GraphColor3=#GPUAqua#

; ------------------------------------------------------------------------
; MEASURES
; ------------------------------------------------------------------------

; ------------------------------------------------------------------------
; Primary option: MSI Afterburner (simplest if you already use it)
; Requirements: Enable "Enable hardware monitoring" and keep RTSS / Afterburner running.
[MeasureGPUMSIAfterburner]
Measure=Plugin
Plugin=MSIAfterburner.dll
DataSource=GPU usage
OnUpdateAction=[!UpdateMeter Graph3][!UpdateMeter GraphBackground3][!UpdateMeter Value3]
UpdateDivider=10

; ------------------------------------------------------------------------
; Alternative: HWiNFO
; Steps:
; 1. In HWiNFO settings: enable "Shared Memory Support".
; 2. Use the included HWiNFOSharedMemoryViewer.exe to find the sensor & entry IDs for GPU Usage.
; 3. Replace the 0x00000000 IDs below with the actual ones (hex values) and switch GraphMeasure3 above.
; NOTE: Leave this measure defined even if unused (harmless) so users can switch later.
; (Comment out if you don't use HWiNFO.)
[MeasureGPUHWiNFO]
;Measure=Plugin
;Plugin=HWiNFO.dll
;HWiNFOSensorId=0x00000000
;HWiNFOSensorInstance=0x0
;HWiNFOEntryId=0x00000000
;OnUpdateAction=[!UpdateMeter Graph3][!UpdateMeter GraphBackground3][!UpdateMeter Value3]
;UpdateDivider=10

; ------------------------------------------------------------------------
; Fallback placeholder (always 0%) if neither plugin is available.
[MeasureGPUPlaceholder]
Measure=Calc
Formula=0
OnUpdateAction=[!UpdateMeter Graph3][!UpdateMeter GraphBackground3][!UpdateMeter Value3]
UpdateDivider=10

; ------------------------------------------------------------------------
; METERS
; ------------------------------------------------------------------------

[Graph3]
Hidden=0

[GraphBackground3]
Hidden=0

[Top3]
Hidden=0

[Left3]
Hidden=0

[Bottom3]
Hidden=0

[Right3]
Hidden=0

[Label3]
Hidden=0

[Value3]
Hidden=0
Text="%1%"
